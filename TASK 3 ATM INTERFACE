//USER CLASS
public class User {
    private String userId;
    private String pin;

    public User(String userId, String pin) {
        this.userId = userId;
        this.pin = pin;
    }

    public boolean authenticate(String inputId, String inputPin) {
        return userId.equals(inputId) && pin.equals(inputPin);
    }
}

//ACCOUNT CLASS
import java.util.ArrayList;
import java.util.List;

public class Account {
    private double balance;
    private List<String> transactionHistory;

    public Account() {
        this.balance = 0.0;
        this.transactionHistory = new ArrayList<>();
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        balance += amount;
        transactionHistory.add("Deposited: " + amount);
    }

    public boolean withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            transactionHistory.add("Withdrew: " + amount);
            return true;
        }
        return false;
    }

    public void transfer(Account targetAccount, double amount) {
        if (withdraw(amount)) {
            targetAccount.deposit(amount);
            transactionHistory.add("Transferred: " + amount);
        }
    }

    public List<String> getTransactionHistory() {
        return transactionHistory;
    }
}

// TRANSACTION CLASS
import java.util.List;

public class Transaction {
    public void displayHistory(List<String> history) {
        for (String record : history) {
            System.out.println(record);
        }
    }
}

//ATM SERVICE CLASS
import java.util.Scanner;

public class ATMService {
    private Account account;
    private Transaction transaction;

    public ATMService(Account account) {
        this.account = account;
        this.transaction = new Transaction();
    }

    public void showMenu() {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("1. View Transaction History");
            System.out.println("2. Withdraw");
            System.out.println("3. Deposit");
            System.out.println("4. Transfer");
            System.out.println("5. Quit");
            System.out.print("Select an option: ");
            
            int choice = scanner.nextInt();
            switch (choice) {
                case 1:
                    transaction.displayHistory(account.getTransactionHistory());
                    break;
                case 2:
                    System.out.print("Enter amount to withdraw: ");
                    double withdrawAmount = scanner.nextDouble();
                    if (account.withdraw(withdrawAmount)) {
                        System.out.println("Withdrawal successful.");
                    } else {
                        System.out.println("Insufficient balance.");
                    }
                    break;
                case 3:
                    System.out.print("Enter amount to deposit: ");
                    double depositAmount = scanner.nextDouble();
                    account.deposit(depositAmount);
                    System.out.println("Deposit successful.");
                    break;
                case 4:
                    // Implement transfer logic (e.g., choosing another account)
                    break;
                case 5:
                    System.out.println("Thank you for using the ATM!");
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}

// ATM CLASS
import java.util.Scanner;

public class ATM {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        User user = new User("user123", "1234"); // Example user
        Account account = new Account();
        ATMService atmService = new ATMService(account);

        System.out.print("Enter User ID: ");
        String userId = scanner.nextLine();
        System.out.print("Enter PIN: ");
        String pin = scanner.nextLine();

        if (user.authenticate(userId, pin)) {
            System.out.println("Login successful!");
            atmService.showMenu();
        } else {
            System.out.println("Invalid User ID or PIN.");
        }
    }
}
